@import url('https://fonts.googleapis.com/css2?family=Raleway&display=swap');

$primary: #17A8FE;
$secondary: #01496C;
$success: #03B042;
$info: #0491D6;
$warning: #D49403;
$danger: #B92234;
$light: #F8F7FF;
$dark: #302C48;

$z-index-base: 2000;
$z-index-overlay: 2010;
$z-index-active: 2020;

$theme-colors: ("primary": $primary,
	"secondary": $secondary,
	"success": $success,
	"info": $info,
	"warning": $warning,
	"danger": $danger,
	"light": $light,
	"dark": $dark,
);

$body-bg: $dark;
$body-color: $light;

$component-active-color: $dark;

$card-bg: $dark;

$modal-content-bg: $dark;

$popover-bg: $dark;

$font-family-sans-serif: 'Raleway',
system-ui,
-apple-system,
Roboto,
"Segoe UI",
"Helvetica Neue",
Arial,
"Noto Sans",
sans-serif,
"Apple Color Emoji",
"Segoe UI Emoji",
"Segoe UI Symbol",
"Noto Color Emoji";

@import "../bootstrap/scss/bootstrap";

/// Mixin to put items on a circle
/// [1] - Allows children to be absolutely positioned
/// [2] - Allows the mixin to be used on a list
/// [3] - In case box-sizing: border-box has been enabled
/// [4] - Allows any type of direct children to be targeted
/// 
/// @param {Integer} $nb-items - Number or items
/// @param {Length} $circle-size - Container size
/// @param {Length} $item-size - Item size
/// @param {String | false} $class-for-IE - Base class name for old IE
@mixin distribute-on-circle($nb-items,
	$circle-size,
	$item-size,
	$class-for-IE: false) {
	$half-item: ($item-size / 2);
	$half-parent: ($circle-size / 2);

	position: relative;
	/* 1 */
	width: $circle-size;
	height: $circle-size;
	padding: 0;
	border-radius: 50%;
	list-style: none;
	/* 2 */
	box-sizing: content-box;
	/* 3 */

	>li.item {
		/* 4 */
		display: block;
		position: absolute;
		top: 50%;
		left: 50%;

		width: $item-size;
		height: $item-size;
		margin: -$half-item;
	}

	>.text-box {
		top: 40%;
	}

	$angle: (360 / $nb-items);
	$rot: 0;

	@for $i from 1 through $nb-items {
		@if not $class-for-IE {
			>.elem-#{$i} {
				transform: rotate($rot * 1deg) translateY(-$half-parent) rotate($rot * -1deg);
				transition: transform 1.5s;
				z-index: 1;

				&.active {
					z-index: $z-index-active;
					>* {
						transform: scale(2);
						filter: grayscale(0);
					}
				}
			}
		}

		@else {
			>.#{$class-for-IE}#{$i} {
				// If CSS transforms are not supported
				$mt: sin($rot * pi() / 180) * $half-parent - $half-item;
				$ml: cos($rot * pi() / 180) * $half-parent - $half-item;
				margin: $mt 0 0 $ml;
			}
		}

		$rot: ($rot + $angle);
	}
}

html, body {
	min-height: 100vh;
	background-image: linear-gradient(to bottom right, $secondary -80%, $dark 60%);
}

h1.display-1 {
	background: linear-gradient(to bottom right, $primary -80%, $light 60%) repeat, white;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}

.circle-container {
	@include distribute-on-circle(11, 10em, 5em, false);
}

@media(max-width:576px){
	.circle-container {
		@include distribute-on-circle(11, 15em, 3.5em, false);
	}
}
@media(min-width:576px){
	.circle-container {
		@include distribute-on-circle(11, 20em, 4.5em, false);
	}
}
@media(min-width:992px){
	.circle-container {
		@include distribute-on-circle(11, 25em, 5.5em, false);
	}
}

.circle-container li {

	img {
		display: block;
		width: 100%;
		border-radius: 50%;
		filter: grayscale(100%);
		box-shadow: 0 0 10px rgba(0, 0, 0, .75);
		transform: scale(1);
		transition: transform .2s, filter .5s;

		&:hover {
			filter: grayscale(0);
		}
	}

	&:not(.active) img:hover {
		transform: scale(1.1);
		border: solid 2px rgba($primary, .3);
	}
}

.text-box {
	opacity:0;
	visibility:hidden;
	transition: visibility .3s ease, opacity .3s ease;
	z-index: $z-index-active;

	&.active {
		visibility:visible;
		opacity:1;
	}
}

.overlay {
	position: fixed;
	/* Sit on top of the page content */
	opacity:0;
	visibility:hidden;
	/* Hidden by default */
	width: 100%;
	/* Full width (cover the whole page) */
	height: 100%;
	/* Full height (cover the whole page) */
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgba(0, 0, 0, 0.5);
	/* Black background with opacity */
	z-index: $z-index-overlay;
	/* Specify a stack order in case you're using a different order for other elements */
	cursor: pointer;
	/* Add a pointer on hover */
	transition: visibility .35s ease, opacity .35s ease;

	&.active {
		visibility:visible;
		opacity:1;
	}
}